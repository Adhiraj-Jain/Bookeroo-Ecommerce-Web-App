version: 2.1

orbs:
  maven: circleci/maven@1.2.0

commands:
  install_deps:
    steps:
      - run:
          name: Install dependencies
          command: |
            npm install

jobs:
  loginmicroservices:

    docker:
      - image: circleci/openjdk:8-jdk-stretch
      - image: circleci/mysql:latest
        environment:
          - MYSQL_ROOT_PASSWORD: SEPTGROUP2
    
    working_directory: ~/BackEnd/loginmicroservices

    steps:
      - checkout:
      # - restore_cache:
          # key: circleci-loginmicroservices-{{ checksum "pom.xml" }}
      - run : cd Backend/loginmicroservices && ls; pwd;

      - run: cd ~/Backend/loginmicroservices && mvn dependency:resolve-plugins dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-loginmicroservices-{{ checksum "pom.xml" }}
      
      # - run: 
          # name: Building the package
          # command: mvn -B -DskipTests clean package

  frontend-build:

    docker:
      - image: circleci/node:15.1
    
    working_directory: ~/FrontEnd/myfirstapp

    steps:
      - checkout

      # - restore_cache:
      #     key: circleci-node-dependencies-{{ checksum "package.json" }}

      - install_deps

      - save_cache:
          paths:
            - node_modules
          key: circleci-node-dependencies-{{ checksum "package.json" }}

      - run:
          name: Building the react app
          command: npm build

      # - run:
      #     name: testing
      #     command: npm run test

  # adminmicroservices:
      
  #     working_directory: ~/BackEnd/adminmicroservices
      
  #     docker:
  #       - image: circleci/openjdk:8-jdk-stretch
  #       - image: circleci/mysql:latest
  #         environment:
  #           MYSQL_USER: root
  #           MYSQL_PASSWORD: SEPTGROUP2
  
  #     steps:
  #       - checkout

workflows:
  version: 2
  build-app:
    jobs:
      - loginmicroservices
      # - frontend-build
      # - adminmicroservices